<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zhsit.hotel.daos.EquipmentHotelMapper">
  <resultMap id="BaseResultMap" type="cn.zhsit.hotel.models.po.EquipmentHotel">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="equipmentname" jdbcType="VARCHAR" property="equipmentname" />
    <result column="equ_brand" jdbcType="VARCHAR" property="equBrand" />
    <result column="equ_type" jdbcType="VARCHAR" property="equType" />
    <result column="buy_time" jdbcType="TIMESTAMP" property="buyTime" />
    <result column="optid" jdbcType="VARCHAR" property="optid" />
    <result column="opttime" jdbcType="TIMESTAMP" property="opttime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="roomid" jdbcType="INTEGER" property="roomid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, equipmentname, equ_brand, equ_type, buy_time, optid, opttime, remark, roomid
  </sql>
  <select id="selectByExample" parameterType="cn.zhsit.hotel.models.po.EquipmentHotelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_equipment_hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_equipment_hotel
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_equipment_hotel
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zhsit.hotel.models.po.EquipmentHotelExample">
    delete from t_equipment_hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zhsit.hotel.models.po.EquipmentHotel">
    insert into t_equipment_hotel (id, equipmentname, equ_brand, 
      equ_type, buy_time, optid, 
      opttime, remark, roomid
      )
    values (#{id,jdbcType=VARCHAR}, #{equipmentname,jdbcType=VARCHAR}, #{equBrand,jdbcType=VARCHAR}, 
      #{equType,jdbcType=VARCHAR}, #{buyTime,jdbcType=TIMESTAMP}, #{optid,jdbcType=VARCHAR}, 
      #{opttime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{roomid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zhsit.hotel.models.po.EquipmentHotel">
    insert into t_equipment_hotel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="equipmentname != null">
        equipmentname,
      </if>
      <if test="equBrand != null">
        equ_brand,
      </if>
      <if test="equType != null">
        equ_type,
      </if>
      <if test="buyTime != null">
        buy_time,
      </if>
      <if test="optid != null">
        optid,
      </if>
      <if test="opttime != null">
        opttime,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="roomid != null">
        roomid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="equipmentname != null">
        #{equipmentname,jdbcType=VARCHAR},
      </if>
      <if test="equBrand != null">
        #{equBrand,jdbcType=VARCHAR},
      </if>
      <if test="equType != null">
        #{equType,jdbcType=VARCHAR},
      </if>
      <if test="buyTime != null">
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="optid != null">
        #{optid,jdbcType=VARCHAR},
      </if>
      <if test="opttime != null">
        #{opttime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roomid != null">
        #{roomid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zhsit.hotel.models.po.EquipmentHotelExample" resultType="java.lang.Long">
    select count(*) from t_equipment_hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_equipment_hotel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentname != null">
        equipmentname = #{record.equipmentname,jdbcType=VARCHAR},
      </if>
      <if test="record.equBrand != null">
        equ_brand = #{record.equBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.equType != null">
        equ_type = #{record.equType,jdbcType=VARCHAR},
      </if>
      <if test="record.buyTime != null">
        buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.optid != null">
        optid = #{record.optid,jdbcType=VARCHAR},
      </if>
      <if test="record.opttime != null">
        opttime = #{record.opttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.roomid != null">
        roomid = #{record.roomid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_equipment_hotel
    set id = #{record.id,jdbcType=VARCHAR},
      equipmentname = #{record.equipmentname,jdbcType=VARCHAR},
      equ_brand = #{record.equBrand,jdbcType=VARCHAR},
      equ_type = #{record.equType,jdbcType=VARCHAR},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      optid = #{record.optid,jdbcType=VARCHAR},
      opttime = #{record.opttime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      roomid = #{record.roomid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zhsit.hotel.models.po.EquipmentHotel">
    update t_equipment_hotel
    <set>
      <if test="equipmentname != null">
        equipmentname = #{equipmentname,jdbcType=VARCHAR},
      </if>
      <if test="equBrand != null">
        equ_brand = #{equBrand,jdbcType=VARCHAR},
      </if>
      <if test="equType != null">
        equ_type = #{equType,jdbcType=VARCHAR},
      </if>
      <if test="buyTime != null">
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="optid != null">
        optid = #{optid,jdbcType=VARCHAR},
      </if>
      <if test="opttime != null">
        opttime = #{opttime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roomid != null">
        roomid = #{roomid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zhsit.hotel.models.po.EquipmentHotel">
    update t_equipment_hotel
    set equipmentname = #{equipmentname,jdbcType=VARCHAR},
      equ_brand = #{equBrand,jdbcType=VARCHAR},
      equ_type = #{equType,jdbcType=VARCHAR},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      optid = #{optid,jdbcType=VARCHAR},
      opttime = #{opttime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      roomid = #{roomid,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectEquByHost" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from t_equipment_hotel equ left join t_roomtype_equipment equtype on equ.id = equtype.equid left join t_room_type_hotel rtype on equtype.typeid=rtype.id left join t_room_hotel rl on rl.roomtypeid=rtype.id  where rl.roomip = #{0}
  </select>
</mapper>